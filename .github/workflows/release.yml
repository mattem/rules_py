# Cut a release whenever a new tag is pushed to the repo.
# You should use an annotated tag, like `git tag -a v1.2.3`
# and put the release notes into the commit message for the tag.
name: Release

on:
  push:
    branches: [release_test]
    # tags:
    #   - "v*.*.*"

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        # archs: ["aarch64", "x86_64"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Mount bazel caches
        uses: actions/cache@v3
        with:
          path: |
            "~/.cache/bazel"
            "~/.cache/bazel-repo"
          key: bazel-cache-${{ hashFiles('**/BUILD.bazel', '**/*.bzl', 'WORKSPACE') }}
          restore-keys: bazel-cache-${{ matrix.os }}-
      # - name: bazel test //...
      #   env:
      #     # Bazelisk will download bazel to here
      #     XDG_CACHE_HOME: ~/.cache/bazel-repo
      #   run: bazel --bazelrc=.github/workflows/ci.bazelrc --bazelrc=.bazelrc test //...
      - name: Build release artifacts
        env:
          DEST: artifacts
          XDG_CACHE_HOME: ~/.cache/bazel-repo
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            >&2 echo "ERROR: the git state is not clean, aborting build..."
            exit 1
          fi
          rm -rf ${{ env.DEST }}
          mkdir -p ${{ env.DEST }}
          bazel --bazelrc=.github/workflows/ci.bazelrc run //tools/release:copy_release_artifacts
      - name: Archive release artifacts 
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-${{ matrix.os }}
          if-no-files-found: ignore
          path: artifacts/
          retention-days: 1
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Prepare release
        run: .github/workflows/release_prep.sh ${{ env.GITHUB_REF_NAME }} > release_notes.txt
      - name: Download built artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          # Use GH feature to populate the changelog automatically
          generate_release_notes: true
          body_path: release_notes.txt
          files: |
            rules_py-*.tar.gz
            artifacts/*
          fail_on_unmatched_files: true
